"use strict";var ganttChart=function(t){function e(t){var e=B.call(t);return e!==C&&e!==M&&A("Expected object or array. Got: "+e),e===C?O.items=O.items.concat(t):O.items.push(t),v(),I}function n(t){return arguments.length?(d3.select(window).on("resize",t!==!1?y:null),O.isAutoResize=t,I):O.isAutoResize}function a(){var t=O.lanes.length,e=h(),n=g();k=d3.select(O.renderTo).append("svg").attr("width",O.width).attr("height",O.height).attr("class","gantt-chart"),k.append("defs").append("clipPath").attr("id","clip").append("rect").attr("width",e).attr("height",n),N=d3.behavior.drag().on("dragstart",l).on("drag",r).on("dragend",i),Y=k.append("g").attr("transform","translate("+O.margin.left+","+O.margin.top+")").attr("width",e).attr("height",n).attr("class","main"),D=Y.append("g").attr("clip-path","url(#clip)"),P=d3.select("body").append("div").attr("class","gantt-tooltip").style("opacity",0),X=d3.time.scale().domain(p()).range([0,e]),F=d3.scale.linear().domain([0,t]).range([0,n]),R=d3.svg.axis().scale(X).orient("bottom").ticks(5),j=d3.svg.axis().scale(F).orient("left").ticks(t).tickFormat(""),Z=d3.behavior.zoom().x(X),Y.append("g").attr("transform","translate(0,"+n+")").attr("class","main axis date").call(R),Y.append("g").attr("class","main axis lane").call(j),Y.append("g").attr("class","laneLabels"),k.call(Z),d3.select("html").on("click",function(t){O.isEnableTooltip&&(event.target.closest("svg rect")||f())})}function r(){d3.select(this).attr("x",parseFloat(d3.select(this).attr("x"))+d3.event.dx).attr("y",parseFloat(d3.select(this).attr("y"))+d3.event.dy)}function i(t){var e=d3.select(this),n=Math.round(F.invert(e.attr("y"))),a=e.attr("x");n>=O.lanes.length&&(n=O.lanes.length-1),0>n&&(n=0),e.attr("y",F(n)),t.lane=n,t.start=Date.parse(X.invert(a)),t.end=Date.parse(X.invert(parseFloat(e.attr("width"))+parseFloat(a)))}function l(){d3.event.sourceEvent.stopPropagation()}function s(t,e){var n;for(n in e)t.hasOwnProperty(n)&&(B.call(e[n])===M?s(t[n],e[n]):t[n]=e[n])}function o(t){return arguments.length?(N.on("dragstart",t?l:null).on("drag",t?r:null).on("dragend",t?i:null),O.isEnableDrag=t,I):O.isEnableDrag}function c(t){return arguments.length?(O.isEnableTooltip=t,x(),I):O.isEnableTooltip}function u(t){return arguments.length?(Z.on("zoom",t?x:null),O.isEnableZoom=t,I):O.isEnableZoom}function d(){return d3.max(O.items,function(t){return t.lane})+1||0}function h(){return O.width-O.margin.right-O.margin.left}function g(){return O.height-O.margin.top-O.margin.bottom}function p(){return[d3.min(O.items,function(t){return t.start}),d3.max(O.items,function(t){return t.end})]}function f(){P.transition().duration(500).style("opacity",0).style("display","none")}function m(t){var e=B.call(t);return arguments.length?(e!==C&&A("Expected array. Got: "+e),O.items=t,v(),I):O.items}function b(t){var e=B.call(t);return arguments.length?(e!==C&&A("Expected array. Got: "+e),O.lanes=t,O.lanes.length=d()||O.lanes.length,T(!O.isShowLaneLabel),T(!O.isShowLaneLabel),I):O.lanes}function w(t){var e=" margin value is incorrect. All values should be numbers";return arguments.length?(void 0!==t.top&&(isNaN(t.top)&&A("'Top'"+e),O.margin.top=parseInt(t.top),Y.attr("transform","translate("+O.margin.left+","+O.margin.top+")")),void 0!==t.right&&(isNaN(t.right)&&A("'Right'"+e),O.margin.right=parseInt(t.right)),void 0!==t.bottom&&(isNaN(t.bottom)&&A("'Bottom'"+e),O.margin.bottom=parseInt(t.bottom)),void 0!==t.left&&(isNaN(t.left)&&A("'Left'"+e),O.margin.left=parseInt(t.left),Y.attr("transform","translate("+O.margin.left+","+O.margin.top+")")),y(),I):O.margin}function v(){var t=d();O.lanes.length=t,X.domain(p()),j.ticks(t),F.domain([0,t]),Z.x(X),x()}function x(){var t,e=g()/(O.lanes.length||1)/(O.sublanes||1);t=D.selectAll("rect").data(O.items,function(t){return t.id}).attr("x",function(t){return X(t.start)}).attr("y",function(t){return O.sublanes<2?F(t.lane):F(t.lane)+t.sublane*e}).attr("width",function(t){return X(t.end)-X(t.start)}).attr("height",function(t){return e}).call(N).on("click",O.isEnableTooltip?E:null),t.enter().append("rect").attr("class",function(t){return t["class"]+" main"}).attr("x",function(t){return X(t.start)}).attr("y",function(t){return O.sublanes<2?F(t.lane):F(t.lane)+t.sublane*e}).attr("width",function(t){return X(t.end)-X(t.start)}).attr("height",function(t){return e}).attr("opacity",.75).call(N).on("click",O.isEnableTooltip?E:null),t.exit().remove(),Y.select("g.main.axis.date").call(R),Y.select("g.main.axis.lane").call(j),f()}function y(){O.isAutoResize&&(O.width=parseInt(d3.select(O.renderTo).style("width")),O.height=parseInt(d3.select(O.renderTo).style("height")));var t=h(),e=g();X.range([0,t]),F.range([0,e]),k.attr("width",O.width),k.attr("height",O.height),k.select("defs").select("clipPath").select("rect").attr("width",t),k.select("defs").select("clipPath").select("rect").attr("height",t),Y.attr("width",t),Y.attr("height",e),Y.select("g.main.axis.date").attr("transform","translate(0,"+g()+")"),Y.select("g.laneLabels").selectAll(".laneText").data(O.lanes).attr("y",function(t,e){return F(e+.5)}),Z.x(X),S(O.isShowYGrid),L(O.isShowYGrid),x()}function T(t){return arguments.length?(O.isShowLaneLabel=t,t===!1?Y.selectAll(".laneText").remove():Y.select("g.laneLabels").selectAll(".laneText").data(O.lanes).enter().append("text").text(function(t){return t}).attr("x",-O.margin.right).attr("y",function(t,e){return F(e+.5)}).attr("dy",".5ex").attr("text-anchor","start").attr("class","laneText"),I):O.isShowLaneLabel}function E(t){d3.event.defaultPrevented||(P.style("display","block").transition().duration(200).style("opacity",.9),P.html("function"==typeof t.tooltip?t.tooltip():t.tooltip).style("left",d3.event.pageX+"px").style("top",d3.event.pageY+"px"))}function S(t){if(!arguments.length)return O.isShowXGrid;var e=t!==!1?-g():-6;return R.tickSize(e,0,0),O.isShowXGrid=t,Y.select("g.main.axis.date").call(R),I}function L(t){if(!arguments.length)return O.isShowYGrid;var e=t!==!1?-h():-6;return j.tickSize(e,0,0),O.isShowYGrid=t,Y.select("g.main.axis.lane").call(j),I}function G(t,e){return arguments.length?(O.width=parseInt(t)||O.width,O.height=parseInt(e)||O.height,n(!1),y(),I):[O.width,O.height]}function z(t){return arguments.length?(O.sublanes=t,x(),I):O.sublanes}function A(t){throw TypeError(t)}var I,k,N,Y,D,P,R,X,j,F,Z,O={},B=Object.prototype.toString,C="[object Array]",M="[object Object]";return I={addItems:e,autoresize:n,enableDrag:o,enableTooltip:c,enableZoom:u,chart:function(){return Y},drag:function(){return N},items:m,lanes:b,margin:w,showLaneLabel:T,showXGrid:S,showYGrid:L,size:G,sublanes:z,svg:function(){return k},redraw:x,renderTo:function(){return O.renderTo},resize:y,xAxis:function(){return R},xScale:function(){return X},yScale:function(){return F},yAxis:function(){return j},zoom:function(){return Z}},O.items=null,O.lanes=null,O.renderTo="#gantt_chart",O.sublanes=1,O.isAutoResize=!0,O.isEnableDrag=!0,O.isEnableTooltip=!0,O.isEnableZoom=!0,O.isShowXGrid=!0,O.isShowYGrid=!0,O.isShowLaneLabel=!0,O.height=null,O.width=null,O.margin={top:20,right:15,bottom:20,left:20},function(){s(O,t),O.items=O.items||[],O.lanes=O.lanes||[],O.lanes.length=d(),null===O.height&&(O.height=parseInt(d3.select(O.renderTo).style("height"))||480),null===O.width&&(O.width=parseInt(d3.select(O.renderTo).style("width"))||640),a(),n(O.isAutoResize),o(O.isEnableDrag),c(O.isEnableTooltip),u(O.isEnableZoom),T(O.isEnableTooltip),S(O.isShowXGrid),L(O.isShowYGrid),x()}(),I};
//# sourceMappingURL=data:application/json;base64,
